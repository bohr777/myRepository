
package com.owinfo.web.webservice.org.tempuri;


import com.owinfo.web.util.ConfigRead;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "MessageCenterService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://192.168.6.112:8094/MsgWcf/MessageCenterService.svc?wsdl")
public class MessageCenterService
    extends Service
{

    private final static URL MESSAGECENTERSERVICE_WSDL_LOCATION;
    private final static WebServiceException MESSAGECENTERSERVICE_EXCEPTION;
    private final static QName MESSAGECENTERSERVICE_QNAME = new QName("http://tempuri.org/", "MessageCenterService");


    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(ConfigRead.TASK_URL);
//            url = new URL("http://192.168.6.112:8094/MsgWcf/MessageCenterService.svc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MESSAGECENTERSERVICE_WSDL_LOCATION = url;
        MESSAGECENTERSERVICE_EXCEPTION = e;
    }
//    private static String url="";
    public MessageCenterService() {
        super(__getWsdlLocation(), MESSAGECENTERSERVICE_QNAME);

//        InputStream in = this.getClass().getResourceAsStream("/resources/services.properties");
//        Properties properties = new Properties();
//        try {
//            properties.load(in);
//        } catch (IOException e) {
//        int i=1;
//        }
//        url=properties.getProperty("taskurl");
    }

    public MessageCenterService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MESSAGECENTERSERVICE_QNAME, features);
    }

    public MessageCenterService(URL wsdlLocation) {
        super(wsdlLocation, MESSAGECENTERSERVICE_QNAME);
    }

    public MessageCenterService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MESSAGECENTERSERVICE_QNAME, features);
    }

    public MessageCenterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MessageCenterService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IMessageCenterService
     */
    @WebEndpoint(name = "BasicHttpBinding_IMessageCenterService")
    public IMessageCenterService getBasicHttpBindingIMessageCenterService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IMessageCenterService"), IMessageCenterService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMessageCenterService
     */
    @WebEndpoint(name = "BasicHttpBinding_IMessageCenterService")
    public IMessageCenterService getBasicHttpBindingIMessageCenterService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IMessageCenterService"), IMessageCenterService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MESSAGECENTERSERVICE_EXCEPTION!= null) {
            throw MESSAGECENTERSERVICE_EXCEPTION;
        }
        return MESSAGECENTERSERVICE_WSDL_LOCATION;
    }

}
